{"version":3,"sources":["redux/actions/actions.js","Header.js","InfoBoxNoCard.js","InfoBoxSelect.js","InfoBoxOrdered.js","InfoBox.js","Map.js","Login.js","Registration.js","Profile.js","PrivateRoute.js","App.js","serviceWorker.js","redux/reducers/authReducer.js","redux/reducers/paymentReducer.js","redux/reducers/addressReducer.js","redux/reducers/flagsReducer.js","redux/reducers/index.js","redux/reducers/routeReducer.js","api.js","redux/sagas/authSaga.js","redux/sagas/registrationSaga.js","redux/sagas/paymentSaga.js","redux/sagas/addressListSaga.js","redux/sagas/routeSaga.js","redux/sagas/sagas.js","store.js","index.js"],"names":["loginRequest","payload","type","loginSuccess","registrationRequest","paymentRequest","paymentGetCardRequest","addressListRequest","routeRequest","logoutUser","flagChangeValue","connect","dispatch","isLoggedOut","history","useHistory","handleLogout","e","preventDefault","push","className","data-testid","animated","url","text","id","map","key","to","onClick","InfoBoxNoCard","Typography","variant","Button","component","Link","color","state","isLoggedIn","auth","addressList","addresses","getAddresses","getRoutes","addressFrom","addressTo","useState","addressValues","setAddressValues","useEffect","inputChange","target","name","value","CreateCustomSelect","addressValue","filteredOption","menuItem","length","filter","item","addressOption","index","MenuItem","Select","onChange","inputProps","Paper","onSubmit","FormControl","InputLabel","changeOrderFlag","orderFlag","paymentFlag","flags","mapboxgl","accessToken","Map","lng","lat","zoom","mapContainer","React","createRef","drawRoute","coordinates","flyTo","center","addLayer","source","data","properties","geometry","layout","paint","getPaymentInfo","this","props","container","current","style","prevProp","routeList","getLayer","removeLayer","removeSource","remove","ref","Component","route","token","login","email","password","white","htmlFor","required","registration","surname","Error","error","Sentry","el","SyntaxError","TypeError","inputValues","payment","cardNumber","expiryDate","userName","cvcNumber","changeField","paymentChangeField","handleInnputChange","placeholder","utils","DateFnsUtils","DatePicker","date","label","minDate","Date","openTo","views","format","fullWidth","cardName","cvc","rest","render","App","initialLoad","window","localStorage","getItem","setState","fallback","componentStack","resetError","Fragment","toString","message","location","pathname","path","Registration","exact","Login","Profile","withRouter","Boolean","hostname","match","initialState","addressDetail","combineReducers","action","headers","Accept","serverLogin","a","fetch","method","body","JSON","stringify","then","response","json","success","serverRegistration","serverPayment","serverGetCard","serverGetAddressList","serverGetRoute","from","loginSaga","logoutSaga","authSagas","call","put","setItem","removeItem","takeEvery","registrationSaga","regSagas","paymentSetSaga","paymentGetSaga","paymentSagas","select","root","paymentSuccess","getAddressesSaga","addressListSaga","getRouteSaga","routeSaga","hadleSagas","fork","sagaMiddleWare","createSagaMiddleWare","createAppStore","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","noop","run","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","theme","document","getElementById","navigator","serviceWorker","ready","unregister","catch","console"],"mappings":"0eAAaA,EAAe,SAACC,GAC3B,MAAO,CACLC,KAAM,gBACND,YAGSE,EAAe,SAACF,GAC3B,MAAO,CACLC,KAAM,gBACND,YASSG,EAAsB,SAACH,GAClC,MAAO,CACLC,KAAM,uBACND,YAcSI,EAAiB,SAACJ,GAC7B,MAAO,CACLC,KAAM,kBACND,YAeSK,EAAwB,SAACL,GACpC,MAAO,CACLC,KAAM,0BACND,YAoBSM,EAAqB,SAACN,GACjC,MAAO,CACLC,KAAM,sBACND,YAUSO,EAAe,SAACP,GAC3B,MAAO,CACLC,KAAM,gBACND,YAeSQ,EAAa,SAACR,GACzB,MAAO,CACLC,KAAM,cACND,YAWSS,EAAkB,SAACT,GAC9B,MAAO,CACLC,KAAM,oBACND,Y,QC1DWU,cAAQ,MANI,SAACC,GAC1B,MAAO,CACLC,YAAa,kBAAMD,EAASH,SAIjBE,EAtDA,SAAC,GAAqB,IAAnBE,EAAkB,EAAlBA,YACVC,EAAUC,cACVC,EAAe,SAACC,GACpBA,EAAEC,iBACFL,IACAC,EAAQK,KAAK,WAOf,OACE,oCACE,4BAAQC,UAAU,SAASC,cAAY,UACrC,yBAAKD,UAAU,+BACb,yBAAKA,UAAU,gBACb,kBAAC,OAAD,CAAME,UAAQ,KAEhB,yBAAKF,UAAU,sBACb,wBAAIA,UAAU,2BAbF,CACpB,CAAEG,IAAK,OAAQC,KAAM,iCAASC,GAAI,OAClC,CAAEF,IAAK,WAAYC,KAAM,6CAAWC,GAAI,WACxC,CAAEF,IAAK,SAAUC,KAAM,iCAASC,GAAI,SAWXC,KAAI,gBAAGH,EAAH,EAAGA,IAAKC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,GAAd,OACjB,wBAAIL,UAAU,0BAA0BO,IAAKF,GACnC,SAAPA,EACC,kBAAC,IAAD,CACEG,GAAIL,EACJH,UAAU,4BACVS,QAASb,GAERQ,GAGH,kBAAC,IAAD,CAAMI,GAAIL,EAAKH,UAAU,6BACtBI,e,oDChBRM,MAxBR,WACL,OACE,yBAAKV,UAAU,mCACb,yBAAKA,UAAU,mBACb,kBAACW,EAAA,EAAD,CAAYC,QAAQ,MAApB,uJAEF,yBAAKZ,UAAU,kBACb,kBAACW,EAAA,EAAD,CAAYC,QAAQ,SAApB,0TAIF,yBAAKZ,UAAU,WACb,kBAACa,EAAA,EAAD,CACEC,UAAWC,IACXP,GAAG,WACHQ,MAAM,UACNJ,QAAQ,aAJV,mG,qEC+DR,IAkBerB,eAlBS,SAAC0B,GACvB,MAAO,CACLC,WAAYD,EAAME,KAAKD,WACvBE,YAAaH,EAAMI,cAII,SAAC7B,GAC1B,MAAO,CACL8B,aAAc,WACZ,OAAO9B,EAASL,MAElBoC,UAAW,SAACC,EAAaC,GACvB,OAAOjC,EAASJ,EAAa,CAAEoC,cAAaC,mBAKnClC,EArFR,YAAkE,IAAzC+B,EAAwC,EAAxCA,aAAcF,EAA0B,EAA1BA,YAAaG,EAAa,EAAbA,UAAa,EAC5BG,mBAAS,CACjDF,YAAa,GACbC,UAAW,KAHyD,mBAC/DE,EAD+D,KAChDC,EADgD,KAMtEC,qBAAU,WACRP,MACC,CAACA,IAEJ,IAAMQ,EAAc,SAACjC,GAAO,IAAD,EACDA,EAAEkC,OAAlBC,EADiB,EACjBA,KAAMC,EADW,EACXA,MACdL,EAAiB,2BAAKD,GAAN,kBAAsBK,EAAOC,MAOzCC,EAAqB,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,eACtCC,EACFjB,EAAYkB,QACZlB,EACGmB,QAAO,SAACC,GAAD,OAAUA,IAASJ,KAC1B9B,KAAI,SAACmC,EAAeC,GAAhB,OACH,kBAACC,EAAA,EAAD,CAAUpC,IAAKmC,EAAOT,MAAOQ,GAC1BA,MAIT,OACE,kBAACG,EAAA,EAAD,CACEX,MAAON,EAAcQ,GACrBU,SAAUf,EACVgB,WAAY,CAAEd,KAAMG,GACpBlC,cAAakC,GAEZE,IAKP,OACE,kBAACU,EAAA,EAAD,CAAO/C,UAAU,kBACf,0BAAMA,UAAU,iBAAiBgD,SA9BnB,SAACnD,GACjBA,EAAEC,iBACFyB,EAAUI,EAAcH,YAAaG,EAAcF,aA6B/C,kBAACwB,EAAA,EAAD,CAAajD,UAAU,qBACrB,kBAACkD,EAAA,EAAD,CAAY7C,GAAG,eAAf,wCACA,kBAAC6B,EAAD,CACEC,aAAa,cACbC,eAAgBT,EAAcF,aAGlC,kBAACwB,EAAA,EAAD,CAAajD,UAAU,qBACrB,kBAACkD,EAAA,EAAD,CAAY7C,GAAG,aAAf,4BACA,kBAAC6B,EAAD,CACEC,aAAa,YACbC,eAAgBT,EAAcH,eAGlC,kBAACX,EAAA,EAAD,CAAQ/B,KAAK,SAAS8B,QAAQ,YAAYI,MAAM,WAAhD,kFC5CR,IAMezB,cAAQ,MANI,SAACC,GAC1B,MAAO,CACL2D,gBAAiB,kBAAM3D,EAASF,EAAgB,CAAE8D,WAAW,SAIlD7D,EA7BR,YAA8C,IAApB4D,EAAmB,EAAnBA,gBAI/B,OACE,yBAAKnD,UAAU,oCACb,yBAAKA,UAAU,mBACb,kBAACW,EAAA,EAAD,CAAYC,QAAQ,MAApB,oFAEF,yBAAKZ,UAAU,kBACb,kBAACW,EAAA,EAAD,CAAYC,QAAQ,SAApB,8KAIF,yBAAKZ,UAAU,WACb,kBAACa,EAAA,EAAD,CAAQG,MAAM,UAAUJ,QAAQ,YAAYH,QAd9B,WAClB0C,MAaI,uHCIR,IAOe5D,eAPS,SAAC0B,GACvB,MAAO,CACLoC,YAAapC,EAAMqC,MAAMD,YACzBD,UAAWnC,EAAMqC,MAAMF,aAIa,KAAzB7D,EAzBR,YAA8C,IAA3B8D,EAA0B,EAA1BA,YAAaD,EAAa,EAAbA,UACrC,OACE,yBAAKpD,UAAU,aACb,yBAAKA,UAAU,uBACZqD,EACCD,EACE,kBAAC,EAAD,MAEA,kBAAC,EAAD,MAGF,kBAAC,EAAD,WCVVG,IAASC,YACP,6F,IAEIC,E,4MACJxC,MAAQ,CACNyC,IAAK,WACLC,IAAK,WACLC,KAAM,I,EAIRC,aAAeC,IAAMC,Y,EAErBC,UAAY,SAAC1D,EAAK2D,GAChB3D,EAAI4D,MAAM,CACRC,OAAQF,EAAY,GACpBL,KAAM,KAGRtD,EAAI8D,SAAS,CACX/D,GAAI,QACJvB,KAAM,OACNuF,OAAQ,CACNvF,KAAM,UACNwF,KAAM,CACJxF,KAAM,UACNyF,WAAY,GACZC,SAAU,CACR1F,KAAM,aACNmF,iBAINQ,OAAQ,CACN,YAAa,QACb,WAAY,SAEdC,MAAO,CACL,aAAc,UACd,aAAc,M,mEAOlBC,EAD2BC,KAAKC,MAAxBF,kBAERC,KAAKtE,IAAM,IAAIiD,IAASE,IAAI,CAC1BqB,UAAWF,KAAKf,aAAakB,QAC7BC,MAAO,mCACPb,OAAQ,CAACS,KAAK3D,MAAMyC,IAAKkB,KAAK3D,MAAM0C,KACpCC,KAAMgB,KAAK3D,MAAM2C,S,yCAIFqB,GACjB,IAAKA,EAASC,WAAaN,KAAKC,MAAMK,UAAU5C,OAAS,EAAG,CACtDsC,KAAKtE,IAAI6E,SAAS,WACpBP,KAAKtE,IAAI8E,YAAY,SACrBR,KAAKtE,IAAI+E,aAAa,UAExB,IAAM/E,EAAMsE,KAAKtE,IACjBsE,KAAKZ,UAAU1D,EAAKsE,KAAKC,MAAMK,c,6CAKjCN,KAAKtE,IAAIgF,W,+BAIT,OACE,yBAAKtF,UAAU,aACb,kBAAC,EAAD,MACA,yBACEuF,IAAKX,KAAKf,aACV5D,cAAY,MACZD,UAAU,sB,GA1EFwF,aAAZ/B,EAOGnD,IAAM,KA0Ef,IAiBef,eAjBS,SAAC0B,GACvB,MAAO,CACLC,WAAYD,EAAME,KAAKD,WACvBgE,UAAWjE,EAAMwE,UAGM,SAACjG,GAC1B,MAAO,CACLmF,eAAgB,SAACe,GAAD,OACdlG,EACEN,EAAsB,CACpBwG,eAMKnG,CAA6CkE,GCvB7ClE,G,OAAAA,aAVS,SAAC0B,GACvB,MAAO,CACLC,WAAYD,EAAME,KAAKD,eAGA,SAAC1B,GAC1B,MAAO,CACLmG,MAAO,SAACC,EAAOC,GAAR,OAAqBrG,EAASZ,EAAa,CAAEgH,QAAOC,kBAGhDtG,EAxED,SAAC,GAA2B,IAAzB2B,EAAwB,EAAxBA,WAAYyE,EAAY,EAAZA,MAOrBjG,EAAUC,cAMhB,OALAkC,qBAAU,WACJX,GACFxB,EAAQK,KAAK,UAEd,CAACL,EAASwB,IAEX,yBAAKlB,UAAU,cAAcC,cAAY,SACvC,yBAAKD,UAAU,oBACb,yBAAKA,UAAU,eACb,kBAAC,OAAD,CAAM8F,OAAK,EAAC5F,UAAQ,KAEtB,yBAAKF,UAAU,cACb,0BAAMA,UAAU,OAAOgD,SAnBb,SAACnD,GACjBA,EAAEC,iBADqB,MAEKD,EAAEkC,OAAtB6D,EAFe,EAEfA,MAAOC,EAFQ,EAERA,SACfF,EAAMC,EAAM3D,MAAO4D,EAAS5D,SAiBpB,yBAAKjC,UAAU,eAAf,kCACA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cAAf,6GACA,kBAAC,IAAD,CAAMQ,GAAG,IAAIR,UAAU,aAAaC,cAAY,WAAhD,2GAIF,yBAAKD,UAAU,8BACb,2BAAO+F,QAAQ,SAAf,gGACA,2BACEjH,KAAK,QACLuB,GAAG,QACH2B,KAAK,QACLhC,UAAU,cACVgG,UAAU,KAGd,yBAAKhG,UAAU,8BACb,2BAAO+F,QAAQ,YAAf,yCACA,2BACEjH,KAAK,WACLuB,GAAG,WACH2B,KAAK,WACLhC,UAAU,cACVgG,UAAU,KAGd,yBAAKhG,UAAU,6BACb,4BAAQlB,KAAK,SAASkB,UAAU,gBAAhC,2C,iBC2ECT,eAZS,SAAC0B,GACvB,MAAO,CACLC,WAAYD,EAAME,KAAKD,eAGA,SAAC1B,GAC1B,MAAO,CACLyG,aAAc,SAACjE,EAAMkE,EAASN,EAAOC,GAAvB,OACZrG,EAASR,EAAoB,CAAEgD,OAAMkE,UAASN,QAAOC,kBAI5CtG,EA3HM,SAAC,GAAkC,IAAhC2B,EAA+B,EAA/BA,WAAY+E,EAAmB,EAAnBA,aAO5BvG,EAAUC,cAChBkC,qBAAU,WACJX,GACFxB,EAAQK,KAAK,UAEd,CAACL,EAASwB,IAwBb,OACE,yBAAKlB,UAAU,qBAAqBC,cAAY,gBAC9C,yBAAKD,UAAU,2BACb,yBAAKA,UAAU,sBACb,kBAAC,OAAD,CAAM8F,OAAK,EAAC5F,UAAQ,KAEtB,yBAAKF,UAAU,qBACb,0BAAMA,UAAU,OAAOgD,SA1CJ,SAACnD,GAC1BA,EAAEC,iBAD8B,MAEWD,EAAEkC,OAArCC,EAFwB,EAExBA,KAAMkE,EAFkB,EAElBA,QAASN,EAFS,EAETA,MAAOC,EAFE,EAEFA,SAC9BI,EAAajE,EAAKC,MAAOiE,EAAQjE,MAAO2D,EAAM3D,MAAO4D,EAAS5D,SAwCtD,yBAAKjC,UAAU,eAAf,sEACA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cAAf,mHACA,kBAAC,IAAD,CAAMQ,GAAG,SAASR,UAAU,aAAaC,cAAY,aAArD,mCAIF,yBAAKD,UAAU,8BACb,2BAAO+F,QAAQ,SAAf,oIACA,2BACEjH,KAAK,QACLuB,GAAG,QACH2B,KAAK,QACLhC,UAAU,cACVgG,UAAU,KAGd,yBAAKhG,UAAU,gBACb,yBAAKA,UAAU,8BACb,2BAAO+F,QAAQ,QAAf,sBACA,2BACEjH,KAAK,OACLuB,GAAG,OACH2B,KAAK,OACLhC,UAAU,cACVgG,UAAU,KAGd,yBAAKhG,UAAU,8BACb,2BAAO+F,QAAQ,WAAf,8CACA,2BACEjH,KAAK,UACLuB,GAAG,UACH2B,KAAK,UACLhC,UAAU,cACVgG,UAAU,MAIhB,yBAAKhG,UAAU,8BACb,2BAAO+F,QAAQ,YAAf,wCACA,2BACEjH,KAAK,WACLuB,GAAG,WACH2B,KAAK,WACLhC,UAAU,cACVgG,UAAU,KAGd,yBAAKhG,UAAU,6BACb,4BAAQlB,KAAK,SAASkB,UAAU,gBAAhC,kHAKJ,4BAAQS,QArFK,WACnB,IACE,MAAM,IAAI0F,MAAM,iBAChB,MAAOC,GACPC,IAAwBD,MAiFpB,WACA,4BAAQ3F,QA/EK,WACnB,MAAO,CAAC,EAAG,EAAG,GAAGH,KAAI,SAACgG,GACpB,OAAO,KAAP,IAAOA,EAAM,QA6ET,WACA,4BAAQ7F,QA3EK,WACnB,IACE,MAAM,IAAI8F,YAAY,mBACtB,MAAOH,GACPC,IAAwBD,MAuEpB,WACA,4BAAQ3F,QArEK,WACnB,MAAM,IAAI+F,UAAU,kBAoEd,iB,mCCGKjH,eAhBS,SAAC0B,GACvB,MAAO,CACLwF,YAAaxF,EAAMyF,YAGI,SAAClH,GAC1B,MAAO,CACLkH,QAAS,SAACC,EAAYC,EAAYC,EAAUC,EAAWpB,GAA9C,OACPlG,EACEP,EAAe,CAAE0H,aAAYC,aAAYC,WAAUC,YAAWpB,YAElEqB,YAAa,SAAClI,GACZW,ETD4B,SAACX,GACjC,MAAO,CACLC,KAAM,uBACND,WSFWmI,CAAmBnI,QAInBU,EA/GC,SAAC,GAA2C,IAAzCmH,EAAwC,EAAxCA,QAASD,EAA+B,EAA/BA,YAAaM,EAAkB,EAAlBA,YACjCE,EAAqB,SAACpH,GAAO,IAAD,EACRA,EAAEkC,OAAlBC,EADwB,EACxBA,KAAMC,EADkB,EAClBA,MACd8E,EAAY,CAAE/E,OAAMC,WAWtB,OACE,yBAAKjC,UAAU,UAAUC,cAAY,WACnC,yBAAKD,UAAU,sBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,kBAAd,8CACA,yBAAKA,UAAU,qBAAf,8EAEF,0BAAMA,UAAU,OAAOgD,SAbhB,SAACnD,GACdA,EAAEC,iBACF4G,EAAQD,KAYA,yBAAKzG,UAAU,mBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,QACb,kBAAC,SAAD,OAEF,yBAAKA,UAAU,8BACb,2BAAO+F,QAAQ,cAAf,kEACA,2BACEjH,KAAK,aACLmD,MAAOwE,EAAYE,WACnBtG,GAAG,aACH2B,KAAK,aACLhC,UAAU,cACVkH,YAAY,sBACZrE,SAAUoE,EACVjB,UAAU,KAId,kBAAC,IAAD,CAAyBmB,MAAOC,KAC9B,kBAACC,EAAA,EAAD,CACErF,KAAK,aACLC,MAAOwE,EAAYG,WACnB/D,SAzCO,SAACyE,GACxBP,EAAY,CAAE/E,KAAM,aAAcC,MAAOqF,KAyCzBC,MAAM,6EACNC,QAAS,IAAIC,KACbP,YAAY,QACZQ,OAAO,OACPC,MAAO,CAAC,OAAQ,SAChBC,OAAO,QACPC,WAAS,MAIf,yBAAK7H,UAAU,eACb,yBAAKA,UAAU,8BACb,2BAAO+F,QAAQ,YAAf,8EACA,2BACEjH,KAAK,WACLuB,GAAG,WACH2B,KAAK,WACLC,MAAOwE,EAAYqB,SACnB9H,UAAU,cACV6C,SAAUoE,EACVjB,UAAU,KAGd,yBAAKhG,UAAU,8BACb,2BAAO+F,QAAQ,OAAf,QACA,2BACEjH,KAAK,MACLuB,GAAG,MACH2B,KAAK,MACLC,MAAOwE,EAAYsB,IACnB/H,UAAU,cACV6C,SAAUoE,EACVjB,UAAU,OAMlB,4BAAQlH,KAAK,SAASkB,UAAU,gBAAhC,iE,SCzEGT,eALS,SAAC0B,GACvB,MAAO,CACLC,WAAYD,EAAME,KAAKD,cAGa,KAAzB3B,EAhBa,SAAC,GAAmD,IAAtCiG,EAAqC,EAAhD1E,UAAsBI,EAA0B,EAA1BA,WAAe8G,EAAW,0CAC7E,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAACpD,GAAD,OACN3D,EAAa,kBAACsE,EAAcX,GAAY,kBAAC,IAAD,CAAUrE,GAAG,a,SCUvD0H,E,4MACJjH,MAAQ,CACNkH,aAAa,G,kEAITC,OAAOC,aAAaC,QAAQ,UAC9B1D,KAAKC,MAAM3D,aAEb0D,KAAK2D,SAAS,CAAEJ,aAAa,M,+BAGrB,IAAD,OACP,OACE,oCACE,kBAAC,IAAD,CACEK,SAAU,gBAAGpC,EAAH,EAAGA,MAAOqC,EAAV,EAAUA,eAAgBC,EAA1B,EAA0BA,WAA1B,OACR,kBAAC,IAAMC,SAAP,KACE,8DACA,6BAAMvC,EAAMwC,YACZ,6BAAMH,GACN,4BACEhI,QAAS,WACP,EAAK8H,SAAS,CAAEM,QAAS,mBACzBH,MAHJ,2BAWJ,yBAAK1I,UAAU,MAAMC,cAAY,QACI,SAAjC2E,KAAKC,MAAMiE,SAASC,UACa,aAAjCnE,KAAKC,MAAMiE,SAASC,WAA4B,kBAAC,EAAD,OAChDnE,KAAK3D,MAAMkH,aACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOa,KAAK,IAAIlI,UAAWmI,EAAcC,OAAK,IAC9C,kBAAC,IAAD,CAAOF,KAAK,SAASlI,UAAWqI,IAChC,kBAAC,EAAD,CAAcH,KAAK,OAAOlI,UAAW2C,IACrC,kBAAC,EAAD,CAAcuF,KAAK,WAAWlI,UAAWsI,Y,GAxCvC5D,aA2DH6D,eAAW9J,YAAQ,MAPP,SAACC,GAC1B,IAAMkG,EAAQ0C,OAAOC,aAAaC,QAAQ,SAC1C,MAAO,CACLpH,WAAY,kBAAM1B,EAAST,EAAa2G,QAIlBnG,CAAkC2I,IClExCoB,QACW,cAA7BlB,OAAOU,SAASS,UAEe,UAA7BnB,OAAOU,SAASS,UAEhBnB,OAAOU,SAASS,SAASC,MACvB,2D,uBClBAC,GAAe,CAAEvI,YAAY,EAAOwE,MAAO,MCA3C+D,GAAe,CACnB9C,WAAY,GACZC,WAAY,GACZkB,SAAU,GACVC,IAAK,ICJD2B,GAAgB,GCAhBD,GAAe,CAAEpG,aAAa,EAAOD,WAAW,GCOvCuG,gBAAgB,CAC7BxI,KJNa,WAAmC,IAAlCF,EAAiC,uDAAzBwI,GAAcG,EAAW,uCAC/C,OAAQA,EAAO9K,MACb,IAAK,gBACH,OAAO8K,EAAO/K,QAChB,IAAK,gBACH,MAAO,CAAEqC,YAAY,EAAMwE,MAAOkE,EAAO/K,SAC3C,IAAK,gBACH,MAAO,CAAEqC,YAAY,GAEvB,IAAK,uBACH,OAAO0I,EAAO/K,QAChB,IAAK,uBACH,MAAO,CAAEqC,YAAY,EAAMwE,MAAOkE,EAAO/K,SAC3C,IAAK,uBACH,MAAO,CAAEqC,YAAY,GAEvB,IAAK,cACH,MAAO,CAAEA,YAAY,EAAOwE,MAAO,MAErC,QACE,OAAOzE,IIbXyF,QHFa,WAAmC,IAAlCzF,EAAiC,uDAAzBwI,GAAcG,EAAW,uCAC/C,OAAQA,EAAO9K,MACb,IAAK,kBAEL,IAAK,kBAEL,IAAK,kBACH,OAAOmC,EACT,IAAK,0BACH,OAAO,eAAKwI,IACd,IAAK,0BACH,OAAO,2BAAKxI,GAAU2I,EAAO/K,SAC/B,IAAK,uBACH,OAAO,2BAAKoC,GAAZ,kBAAoB2I,EAAO/K,QAAQmD,KAAO4H,EAAO/K,QAAQoD,QAC3D,QACE,OAAOhB,IGZXI,UFRa,WAAoC,IAAnCJ,EAAkC,uDAA1ByI,GAAeE,EAAW,uCAChD,OAAQA,EAAO9K,MACb,IAAK,sBACH,OAAOmC,EACT,IAAK,sBACH,OAAO2I,EAAO/K,QAChB,IAAK,sBAEL,QACE,OAAOoC,IEAXwE,MCTa,WAAmC,IAAlCxE,EAAiC,uDAF5B,KAEiB2I,EAAW,uCAC/C,OAAQA,EAAO9K,MACb,IAAK,gBACH,OAAO,KACT,IAAK,gBACH,OAAO8K,EAAO/K,QAChB,IAAK,gBAEL,QACE,OAAOoC,IDCXqC,MDVa,WAAmC,IAAlCrC,EAAiC,uDAAzBwI,GAAcG,EAAW,uCAC/C,OAAQA,EAAO9K,MACb,IAAK,oBACH,OAAO,2BAAKmC,GAAU2I,EAAO/K,SAC/B,QACE,OAAOoC,ICMXgF,cAAc,I,+CEbV9F,GAAM,8BACN0J,GAAU,CACdC,OAAQ,mBACR,eAAgB,oBAGLC,GAAW,yCAAG,WAAOnE,EAAOC,GAAd,UAAAmE,EAAA,sEACZC,MAAM,GAAD,OAAI9J,GAAJ,SAAgB,CAChC+J,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEzE,QAAOC,aAC9BgE,aAECS,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAChG,GAAD,MAAU,CAACA,EAAKmG,QAASnG,EAAKoB,UAPb,mFAAH,wDAUXgF,GAAkB,yCAAG,WAAO1I,EAAMkE,EAASN,EAAOC,GAA7B,UAAAmE,EAAA,sEACnBC,MAAM,GAAD,OAAI9J,GAAJ,aAAoB,CACpC+J,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAErI,OAAMkE,UAASN,QAAOC,aAC7CgE,aAECS,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAChG,GAAD,MAAU,CAACA,EAAKmG,QAASnG,EAAKoB,UAPN,mFAAH,4DAUlBiF,GAAa,yCAAG,WAAO9L,GAAP,UAAAmL,EAAA,sEACdC,MAAM,GAAD,OAAI9J,GAAJ,SAAgB,CAChC+J,OAAQ,OACRC,KAAMC,KAAKC,UAAUxL,GACrBgL,aAECS,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAChG,GAAD,OAAUA,EAAKmG,WAPI,mFAAH,sDAUbG,GAAgB,SAAClF,GAC5B,OAAOuE,MAAM,GAAD,OAAI9J,GAAJ,uBAAsBuF,GAAS,CACzCwE,OAAQ,MACRL,aACCS,MAAK,SAACC,GAAD,OAAcA,EAASC,WAGpBK,GAAuB,WAClC,OAAOZ,MAAM,GAAD,OAAI9J,GAAJ,gBAAuB,CACjC+J,OAAQ,MACRL,aACCS,MAAK,SAACC,GAAD,OAAcA,EAASC,WAGpBM,GAAc,yCAAG,WAAOC,EAAMvK,GAAb,UAAAwJ,EAAA,sEACfC,MAAM,GAAD,OAAI9J,GAAJ,2BAA0B4K,EAA1B,qBAA2CvK,GAAM,CACjE0J,OAAQ,MACRL,aACCS,MAAK,SAACC,GAAD,OAAcA,EAASC,UAJH,mFAAH,wD,aC9CVQ,I,aASAC,I,aAIAC,IAbV,SAAUF,GAAUpB,GAApB,oFAEoB,OAFpB,EACuBA,EAAO/K,QAA3B+G,EADH,EACGA,MAAOC,EADV,EACUA,SADV,SAE0BsF,aAAKpB,GAAanE,EAAOC,GAFnD,sCAEE4E,EAFF,KAEW/E,EAFX,MAGD+E,EAHC,iBAIH,OAJG,UAIGW,aAAIrM,EAAa2G,IAJpB,QAKH,OALG,UAKG0C,OAAOC,aAAagD,QAAQ,QAAS3F,GALxC,yCASA,SAAUuF,KAAV,kEACL,OADK,SACC7C,OAAOC,aAAaiD,WAAW,SADhC,wCAIA,SAAUJ,KAAV,kEACL,OADK,SACCK,aAAU3M,IAAeE,KAAMkM,IADhC,OAEL,OAFK,SAECO,aAAUlM,IAAaP,KAAMmM,IAF9B,wC,iBCbUO,I,aAeAC,IAfV,SAAUD,GAAiB5B,GAA3B,wFAEoB,OAFpB,EACsCA,EAAO/K,QAA1CmD,EADH,EACGA,KAAMkE,EADT,EACSA,QAASN,EADlB,EACkBA,MAAOC,EADzB,EACyBA,SADzB,SAE0BsF,aAC7BT,GACA1I,EACAkE,EACAN,EACAC,GAPG,sCAEE4E,EAFF,KAEW/E,EAFX,MASD+E,EATC,iBAUH,OAVG,UAUGW,arBWD,CACLtM,KAAM,uBACND,QqBb8B6G,IAV3B,QAWH0C,OAAOC,aAAagD,QAAQ,QAAS3F,GAXlC,yCAeA,SAAU+F,KAAV,kEACL,OADK,SACCF,aAAUvM,IAAsBF,KAAM0M,IADvC,wC,iBCPUE,I,aAuBAC,I,aAiBAC,IAxCV,SAAUF,KAAV,oFAEU,OAFV,kBAEgBG,eAFhB,OAKc,OAHXC,EAFH,SAG+CA,EAAKpF,QAA/CC,EAHL,EAGKA,WAAYC,EAHjB,EAGiBA,WAAYkB,EAH7B,EAG6BA,SAAUC,EAHvC,EAGuCA,IAClCrC,EAAUoG,EAAK3K,KAAfuE,MAJL,SAKoByF,aAAKR,GAAe,CACzChE,aACAC,aACAkB,WACAC,MACArC,UAVC,mCAaD,OAbC,UAaK0F,atBiBH,CACLtM,KAAM,kBACND,asBnBYkN,IAbT,QAcD,OAdC,UAcKX,aAAI9L,EAAgB,CAAE+D,aAAa,KAdxC,gCAgBD,OAhBC,UAgBK+H,atBoBH,CACLtM,KAAM,oBsBrCH,gCAmBH,OAnBG,oCAmBGsM,atBiBD,CACLtM,KAAM,oBsBrCH,uDAuBA,SAAU6M,KAAV,4EAEU,OAFV,kBAEgBE,eAFhB,OAIc,OAFXC,EAFH,OAGKpG,EAAUoG,EAAK3K,KAAfuE,MAHL,SAIoByF,aAAKP,GAAelF,GAJxC,YAIG6E,EAJH,SAMcA,EAASnE,MANvB,iBAOD,OAPC,UAOKgF,atBkBH,CACLtM,KAAM,0BACND,QsBpBkC0L,IAP/B,QAQD,OARC,UAQKa,aAAI9L,EAAgB,CAAE+D,aAAa,KARxC,gCAUD,OAVC,UAUK+H,atBqBH,CACLtM,KAAM,4BsBhCH,gCAaH,OAbG,oCAaGsM,atBkBD,CACLtM,KAAM,4BsBhCH,uDAiBA,SAAU8M,KAAV,kEACL,OADK,SACCL,aAAUtM,IAAiBH,KAAM4M,IADlC,OAEL,OAFK,SAECH,aAAUrM,IAAwBJ,KAAM6M,IAFzC,wC,iBC5CUK,I,aASAC,IATV,SAAUD,KAAV,wEAEc,OAFd,kBAEoBb,aAAKN,IAFzB,OAGH,OADMN,EAFH,gBAGGa,avBwED,CACLtM,KAAM,sBACND,QuB1E6B0L,EAASlJ,YAHnC,8BAKH,OALG,8BAIMwH,QAJN,KAIevE,KAJf,UAKG8G,avB2DD,CACLtM,KAAM,wBuBjEH,sDASA,SAAUmN,KAAV,kEACL,OADK,SACCV,aAAUpM,IAAqBL,KAAMkN,IADtC,wC,iBCRUE,I,aAWAC,IAXV,SAAUD,GAAatC,GAAvB,8EAGc,OAHd,WAEgCA,EAAO/K,QAAlC2C,EAFL,EAEKA,YAAaC,EAFlB,EAEkBA,UAFlB,SAGoB0J,aAAKL,GAAgBtJ,EAAaC,GAHtD,OAIH,OADM8I,EAHH,gBAIGa,axBmFD,CACLtM,KAAM,gBACND,QwBrFuB0L,IAJpB,OAKH,OALG,SAKGa,aAAI9L,EAAgB,CAAE8D,WAAW,KALpC,+BAOH,OAPG,+BAMMyF,QANN,UAOGuC,axBsFD,CACLtM,KAAM,kBwB9FH,uDAWA,SAAUqN,KAAV,kEACL,OADK,SACCZ,aAAUnM,IAAeN,KAAMoN,IADhC,wC,iBCbUE,IAAV,SAAUA,KAAV,kEACL,OADK,SACCC,aAAKnB,IADN,OAEL,OAFK,SAECmB,aAAKZ,IAFN,OAGL,OAHK,SAGCY,aAAKT,IAHN,OAIL,OAJK,SAICS,aAAKJ,IAJN,OAKL,OALK,UAKCI,aAAKF,IALN,yCCFP,IAAMG,GAAiBC,eAiBRC,GAfQ,WACrB,IAAMC,EAAQC,aACZC,GACAC,aACEC,aAAgBP,IAChBlE,OAAO0E,6BACH1E,OAAO0E,+BACP,SAACC,GAAD,OAAUA,KAKlB,OADAT,GAAeU,IAAIZ,IACZK,G,oBCLTpG,KAAY,CACV4G,IAAK,4EACLC,aAAc,CAAC,IAAIC,KAAaC,gBAEhCC,iBAAkB,IAGb,IAAMZ,GAAQD,KAErBc,IAASrF,OACP,kBAAC,IAAD,CAAUwE,MAAOA,IACf,kBAAC,KAAD,CAAkBc,MAAOA,SACvB,kBAAC,IAAD,KACE,kBAAC,GAAD,SAINC,SAASC,eAAe,SfoGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtD,MAAK,SAAArE,GACJA,EAAa4H,gBAEdC,OAAM,SAAA1H,GACL2H,QAAQ3H,MAAMA,EAAMyC,c","file":"static/js/main.820ac285.chunk.js","sourcesContent":["export const loginRequest = (payload) => {\r\n  return {\r\n    type: \"LOGIN_REQUEST\",\r\n    payload,\r\n  };\r\n};\r\nexport const loginSuccess = (payload) => {\r\n  return {\r\n    type: \"LOGIN_SUCCESS\",\r\n    payload,\r\n  };\r\n};\r\nexport const loginFailure = () => {\r\n  return {\r\n    type: \"LOGIN_FAILURE\",\r\n  };\r\n};\r\n\r\nexport const registrationRequest = (payload) => {\r\n  return {\r\n    type: \"REGISTRATION_REQUEST\",\r\n    payload,\r\n  };\r\n};\r\nexport const registrationSuccess = (payload) => {\r\n  return {\r\n    type: \"REGISTRATION_SUCCESS\",\r\n    payload,\r\n  };\r\n};\r\nexport const registrationFailure = () => {\r\n  return {\r\n    type: \"REGISTRATION_FAILURE\",\r\n  };\r\n};\r\nexport const paymentRequest = (payload) => {\r\n  return {\r\n    type: \"PAYMENT_REQUEST\",\r\n    payload,\r\n  };\r\n};\r\nexport const paymentSuccess = (payload) => {\r\n  return {\r\n    type: \"PAYMENT_SUCCESS\",\r\n    payload,\r\n  };\r\n};\r\nexport const paymentFailure = () => {\r\n  return {\r\n    type: \"PAYMENT_FAILURE\",\r\n  };\r\n};\r\n\r\nexport const paymentGetCardRequest = (payload) => {\r\n  return {\r\n    type: \"PAYMENT_GETCARD_REQUEST\",\r\n    payload,\r\n  };\r\n};\r\nexport const paymentGetCardSuccess = (payload) => {\r\n  return {\r\n    type: \"PAYMENT_GETCARD_SUCCESS\",\r\n    payload,\r\n  };\r\n};\r\nexport const paymentGetCardFailure = () => {\r\n  return {\r\n    type: \"PAYMENT_GETCARD_FAILURE\",\r\n  };\r\n};\r\n\r\nexport const addressListFailure = () => {\r\n  return {\r\n    type: \"ADDRESSLIST_FAILURE\",\r\n  };\r\n};\r\nexport const addressListRequest = (payload) => {\r\n  return {\r\n    type: \"ADDRESSLIST_REQUEST\",\r\n    payload,\r\n  };\r\n};\r\nexport const addressListSuccess = (payload) => {\r\n  return {\r\n    type: \"ADDRESSLIST_SUCCESS\",\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const routeRequest = (payload) => {\r\n  return {\r\n    type: \"ROUTE_REQUEST\",\r\n    payload,\r\n  };\r\n};\r\nexport const routeSuccess = (payload) => {\r\n  return {\r\n    type: \"ROUTE_SUCCESS\",\r\n    payload,\r\n  };\r\n};\r\nexport const routeFailure = () => {\r\n  return {\r\n    type: \"ROUTE_FAILURE\",\r\n  };\r\n};\r\n\r\nexport const logoutUser = (payload) => {\r\n  return {\r\n    type: \"LOGOUT_USER\",\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const paymentChangeField = (payload) => {\r\n  return {\r\n    type: \"PAYMENT_CHANGE_FIELD\",\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const flagChangeValue = (payload) => {\r\n  return {\r\n    type: \"FLAG_CHANGE_VALUE\",\r\n    payload,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Logo } from \"loft-taxi-mui-theme\";\r\nimport \"./Header.scss\";\r\nimport { func } from \"prop-types\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { logoutUser } from \"./redux/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst propTypes = {\r\n  isLoggedOut: func,\r\n};\r\n\r\nconst Header = ({ isLoggedOut }) => {\r\n  const history = useHistory();\r\n  const handleLogout = (e) => {\r\n    e.preventDefault();\r\n    isLoggedOut();\r\n    history.push(\"/login\");\r\n  };\r\n  const headerButtons = [\r\n    { url: \"/map\", text: \"Карта\", id: \"map\" },\r\n    { url: \"/profile\", text: \"Профиль\", id: \"profile\" },\r\n    { url: \"/login\", text: \"Выйти\", id: \"home\" },\r\n  ];\r\n  return (\r\n    <>\r\n      <header className=\"header\" data-testid=\"header\">\r\n        <div className=\"header__container container\">\r\n          <div className=\"header__logo\">\r\n            <Logo animated />\r\n          </div>\r\n          <nav className=\"header__navigation\">\r\n            <ul className=\"header__navigation-list\">\r\n              {headerButtons.map(({ url, text, id }) => (\r\n                <li className=\"header__navigation-item\" key={id}>\r\n                  {id === \"home\" ? (\r\n                    <Link\r\n                      to={url}\r\n                      className=\"header__navigation-button\"\r\n                      onClick={handleLogout}\r\n                    >\r\n                      {text}\r\n                    </Link>\r\n                  ) : (\r\n                    <Link to={url} className=\"header__navigation-button\">\r\n                      {text}\r\n                    </Link>\r\n                  )}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nHeader.propTypes = propTypes;\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    isLoggedOut: () => dispatch(logoutUser()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Header);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography, Button } from \"@material-ui/core\";\r\nimport \"./InfoBox.scss\";\r\n\r\nexport function InfoBoxNoCard() {\r\n  return (\r\n    <div className=\"info__box_nocard info__box_wrap\">\r\n      <div className=\"info__box_title\">\r\n        <Typography variant=\"h4\">Заполните платежные данные</Typography>\r\n      </div>\r\n      <div className=\"info__box_text\">\r\n        <Typography variant=\"body1\">\r\n          Укажите информацию о банковской карте, чтобы сделать заказ.\r\n        </Typography>\r\n      </div>\r\n      <div className=\"actions\">\r\n        <Button\r\n          component={Link}\r\n          to=\"/profile\"\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n        >\r\n          Перейти в профиль\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default InfoBoxNoCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Paper,\r\n  FormControl,\r\n  Button,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { addressListRequest, routeRequest } from \"./redux/actions/actions\";\r\nimport \"./InfoBox.scss\";\r\n\r\nexport function InfoBoxSelect({ getAddresses, addressList, getRoutes }) {\r\n  const [addressValues, setAddressValues] = useState({\r\n    addressFrom: \"\",\r\n    addressTo: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    getAddresses();\r\n  }, [getAddresses]);\r\n\r\n  const inputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setAddressValues({ ...addressValues, [name]: value });\r\n  };\r\n  const makeOrder = (e) => {\r\n    e.preventDefault();\r\n    getRoutes(addressValues.addressFrom, addressValues.addressTo);\r\n  };\r\n\r\n  const CreateCustomSelect = ({ addressValue, filteredOption }) => {\r\n    let menuItem =\r\n      addressList.length &&\r\n      addressList\r\n        .filter((item) => item !== filteredOption)\r\n        .map((addressOption, index) => (\r\n          <MenuItem key={index} value={addressOption}>\r\n            {addressOption}\r\n          </MenuItem>\r\n        ));\r\n\r\n    return (\r\n      <Select\r\n        value={addressValues[addressValue]}\r\n        onChange={inputChange}\r\n        inputProps={{ name: addressValue }}\r\n        data-testid={addressValue}\r\n      >\r\n        {menuItem}\r\n      </Select>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper className=\"info__box_wrap\">\r\n      <form className=\"info__box_form\" onSubmit={makeOrder}>\r\n        <FormControl className=\"info__box_control\">\r\n          <InputLabel id=\"addressFrom\">Откуда</InputLabel>\r\n          <CreateCustomSelect\r\n            addressValue=\"addressFrom\"\r\n            filteredOption={addressValues.addressTo}\r\n          />\r\n        </FormControl>\r\n        <FormControl className=\"info__box_control\">\r\n          <InputLabel id=\"addressTo\">Куда</InputLabel>\r\n          <CreateCustomSelect\r\n            addressValue=\"addressTo\"\r\n            filteredOption={addressValues.addressFrom}\r\n          />\r\n        </FormControl>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Вызвать такси\r\n        </Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.auth.isLoggedIn,\r\n    addressList: state.addresses,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAddresses: () => {\r\n      return dispatch(addressListRequest());\r\n    },\r\n    getRoutes: (addressFrom, addressTo) => {\r\n      return dispatch(routeRequest({ addressFrom, addressTo }));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InfoBoxSelect);\r\n","import React from \"react\";\r\nimport { Typography, Button } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { flagChangeValue } from \"./redux/actions/actions\";\r\n\r\nexport function InfoBoxOrdered({ changeOrderFlag }) {\r\n  const handleClick = () => {\r\n    changeOrderFlag();\r\n  };\r\n  return (\r\n    <div className=\"info__box_ordered info__box_wrap\">\r\n      <div className=\"info__box_title\">\r\n        <Typography variant=\"h4\">Заказ размещен</Typography>\r\n      </div>\r\n      <div className=\"info__box_text\">\r\n        <Typography variant=\"body1\">\r\n          Ваше такси прибудет через 10 минут\r\n        </Typography>\r\n      </div>\r\n      <div className=\"actions\">\r\n        <Button color=\"primary\" variant=\"contained\" onClick={handleClick}>\r\n          Оформить новый заказ\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeOrderFlag: () => dispatch(flagChangeValue({ orderFlag: false })),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(InfoBoxOrdered);\r\n","import React from \"react\";\r\nimport InfoBoxNoCard from \"./InfoBoxNoCard\";\r\nimport InfoBoxSelect from \"./InfoBoxSelect\";\r\nimport InfoBoxOrdered from \"./InfoBoxOrdered\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport function InfoBox({ paymentFlag, orderFlag }) {\r\n  return (\r\n    <div className=\"info__box\">\r\n      <div className=\"info__box_container\">\r\n        {paymentFlag ? (\r\n          orderFlag ? (\r\n            <InfoBoxOrdered />\r\n          ) : (\r\n            <InfoBoxSelect />\r\n          )\r\n        ) : (\r\n          <InfoBoxNoCard />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    paymentFlag: state.flags.paymentFlag,\r\n    orderFlag: state.flags.orderFlag,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(InfoBox);\r\n","import React, { Component } from \"react\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport \"./Map.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport InfoBox from \"./InfoBox\";\r\nimport { paymentGetCardRequest } from \"./redux/actions/actions\";\r\n\r\nmapboxgl.accessToken =\r\n  \"pk.eyJ1IjoibmF2cmFzODgiLCJhIjoiY2tmNXU1emE3MHFzbDJ5bm82ZDJjZnQ4cSJ9.Y3wSyP78GmPNBV00ZKwktg\";\r\n\r\nclass Map extends Component {\r\n  state = {\r\n    lng: 37.1903229,\r\n    lat: 55.9889082,\r\n    zoom: 13,\r\n  };\r\n\r\n  static map = null;\r\n  mapContainer = React.createRef();\r\n\r\n  drawRoute = (map, coordinates) => {\r\n    map.flyTo({\r\n      center: coordinates[0],\r\n      zoom: 15,\r\n    });\r\n\r\n    map.addLayer({\r\n      id: \"route\",\r\n      type: \"line\",\r\n      source: {\r\n        type: \"geojson\",\r\n        data: {\r\n          type: \"Feature\",\r\n          properties: {},\r\n          geometry: {\r\n            type: \"LineString\",\r\n            coordinates,\r\n          },\r\n        },\r\n      },\r\n      layout: {\r\n        \"line-join\": \"round\",\r\n        \"line-cap\": \"round\",\r\n      },\r\n      paint: {\r\n        \"line-color\": \"#ffc617\",\r\n        \"line-width\": 8,\r\n      },\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { getPaymentInfo } = this.props;\r\n    getPaymentInfo();\r\n    this.map = new mapboxgl.Map({\r\n      container: this.mapContainer.current,\r\n      style: \"mapbox://styles/mapbox/light-v10\",\r\n      center: [this.state.lng, this.state.lat],\r\n      zoom: this.state.zoom,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProp) {\r\n    if (!prevProp.routeList && this.props.routeList.length > 0) {\r\n      if (this.map.getLayer(\"route\")) {\r\n        this.map.removeLayer(\"route\");\r\n        this.map.removeSource(\"route\");\r\n      }\r\n      const map = this.map;\r\n      this.drawRoute(map, this.props.routeList);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.map.remove();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"map__page\">\r\n        <InfoBox />\r\n        <div\r\n          ref={this.mapContainer}\r\n          data-testid=\"Map\"\r\n          className=\"mapContainer\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.auth.isLoggedIn,\r\n    routeList: state.route,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getPaymentInfo: (token) =>\r\n      dispatch(\r\n        paymentGetCardRequest({\r\n          token,\r\n        })\r\n      ),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);\r\n","import React, { useEffect } from \"react\";\r\nimport { Logo } from \"loft-taxi-mui-theme\";\r\nimport \"./Login.scss\";\r\nimport { func, bool } from \"prop-types\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginRequest } from \"./redux/actions/actions\";\r\n\r\nconst propTypes = {\r\n  isLoggedIn: bool,\r\n  registration: func,\r\n};\r\n\r\nconst Login = ({ isLoggedIn, login }) => {\r\n  const formLogin = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = e.target;\r\n    login(email.value, password.value);\r\n  };\r\n\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      history.push(\"/map\");\r\n    }\r\n  }, [history, isLoggedIn]);\r\n  return (\r\n    <div className=\"login__page\" data-testid=\"login\">\r\n      <div className=\"login__container\">\r\n        <div className=\"login__logo\">\r\n          <Logo white animated />\r\n        </div>\r\n        <div className=\"login__row\">\r\n          <form className=\"form\" onSubmit={formLogin}>\r\n            <div className=\"form__title\">Войти</div>\r\n            <div className=\"form__row\">\r\n              <div className=\"form__text\">Новый пользователь ?</div>\r\n              <Link to=\"/\" className=\"form__link\" data-testid=\"regLink\">\r\n                Зарегистрируйтесь\r\n              </Link>\r\n            </div>\r\n            <div className=\"form__row form__row_column\">\r\n              <label htmlFor=\"email\">Имя пользователя*</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                className=\"form__input\"\r\n                required={true}\r\n              ></input>\r\n            </div>\r\n            <div className=\"form__row form__row_column\">\r\n              <label htmlFor=\"password\">Пароль*</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                className=\"form__input\"\r\n                required={true}\r\n              ></input>\r\n            </div>\r\n            <div className=\"form__row form__row_right\">\r\n              <button type=\"submit\" className=\"form__button\">\r\n                Войти\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLogin.propTypes = propTypes;\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.auth.isLoggedIn,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    login: (email, password) => dispatch(loginRequest({ email, password })),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { useEffect } from \"react\";\r\nimport \"./Registration.scss\";\r\nimport { Logo } from \"loft-taxi-mui-theme\";\r\nimport { bool, func } from \"prop-types\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { registrationRequest } from \"./redux/actions/actions\";\r\nimport * as Sentry from \"@sentry/react\";\r\n\r\nconst propTypes = {\r\n  isLoggedIn: bool,\r\n  registration: func,\r\n};\r\n\r\nconst Registration = ({ isLoggedIn, registration }) => {\r\n  const registrationSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, surname, email, password } = e.target;\r\n    registration(name.value, surname.value, email.value, password.value);\r\n  };\r\n\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      history.push(\"/map\");\r\n    }\r\n  }, [history, isLoggedIn]);\r\n\r\n  const handleError1 = () => {\r\n    try {\r\n      throw new Error(\"testing error\");\r\n    } catch (error) {\r\n      Sentry.captureException(error);\r\n    }\r\n  };\r\n  const handleError2 = () => {\r\n    return [1, 2, 3].map((el) => {\r\n      return el ** 2;\r\n    });\r\n  };\r\n  const handleError3 = () => {\r\n    try {\r\n      throw new SyntaxError(\"new syntaxerror\");\r\n    } catch (error) {\r\n      Sentry.captureException(error);\r\n    }\r\n  };\r\n  const handleError4 = () => {\r\n    throw new TypeError(\"new typerror\");\r\n  };\r\n  return (\r\n    <div className=\"registration__page\" data-testid=\"registration\">\r\n      <div className=\"registration__container\">\r\n        <div className=\"registration__logo\">\r\n          <Logo white animated />\r\n        </div>\r\n        <div className=\"registration__row\">\r\n          <form className=\"form\" onSubmit={registrationSubmit}>\r\n            <div className=\"form__title\">Регистрация</div>\r\n            <div className=\"form__row\">\r\n              <div className=\"form__text\">Уже зарегистрирован ?</div>\r\n              <Link to=\"/login\" className=\"form__link\" data-testid=\"loginLink\">\r\n                Войти\r\n              </Link>\r\n            </div>\r\n            <div className=\"form__row form__row_column\">\r\n              <label htmlFor=\"email\">Адрес электронной почты</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                className=\"form__input\"\r\n                required={true}\r\n              ></input>\r\n            </div>\r\n            <div className=\"form__block \">\r\n              <div className=\"form__row form__row_column\">\r\n                <label htmlFor=\"name\">Имя</label>\r\n                <input\r\n                  type=\"name\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  className=\"form__input\"\r\n                  required={true}\r\n                ></input>\r\n              </div>\r\n              <div className=\"form__row form__row_column\">\r\n                <label htmlFor=\"surname\">Фамилия</label>\r\n                <input\r\n                  type=\"surname\"\r\n                  id=\"surname\"\r\n                  name=\"surname\"\r\n                  className=\"form__input\"\r\n                  required={true}\r\n                ></input>\r\n              </div>\r\n            </div>\r\n            <div className=\"form__row form__row_column\">\r\n              <label htmlFor=\"password\">Пароль</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                className=\"form__input\"\r\n                required={true}\r\n              ></input>\r\n            </div>\r\n            <div className=\"form__row form__row_right\">\r\n              <button type=\"submit\" className=\"form__button\">\r\n                Зарегистрироваться\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <button onClick={handleError1}>Error 1</button>\r\n          <button onClick={handleError2}>Error 2</button>\r\n          <button onClick={handleError3}>Error 3</button>\r\n          <button onClick={handleError4}>Error 4</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nRegistration.propTypes = propTypes;\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.auth.isLoggedIn,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    registration: (name, surname, email, password) =>\r\n      dispatch(registrationRequest({ name, surname, email, password })),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Registration);\r\n","import React from \"react\";\r\nimport { MCIcon } from \"loft-taxi-mui-theme\";\r\nimport \"./Profile.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { paymentRequest, paymentChangeField } from \"./redux/actions/actions\";\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nconst Profile = ({ payment, inputValues, changeField }) => {\r\n  const handleInnputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    changeField({ name, value });\r\n  };\r\n  const handleDateChange = (date) => {\r\n    changeField({ name: \"expiryDate\", value: date });\r\n  };\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    payment(inputValues);\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile\" data-testid=\"profile\">\r\n      <div className=\"profile__container\">\r\n        <div className=\"profile__wrap\">\r\n          <div className=\"profile__head\">\r\n            <h2 className=\"profile__title\">Профиль</h2>\r\n            <div className=\"profile__subtitle\">Способ оплаты</div>\r\n          </div>\r\n          <form className=\"form\" onSubmit={submit}>\r\n            <div className=\"form__container\">\r\n              <div className=\"form__left\">\r\n                <div className=\"icon\">\r\n                  <MCIcon />\r\n                </div>\r\n                <div className=\"form__row form__row_column\">\r\n                  <label htmlFor=\"cardNumber\">Номер карты:</label>\r\n                  <input\r\n                    type=\"cardNumber\"\r\n                    value={inputValues.cardNumber}\r\n                    id=\"cardNumber\"\r\n                    name=\"cardNumber\"\r\n                    className=\"form__input\"\r\n                    placeholder=\"0000 0000 0000 0000\"\r\n                    onChange={handleInnputChange}\r\n                    required={true}\r\n                  ></input>\r\n                </div>\r\n\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <DatePicker\r\n                    name=\"expiryDate\"\r\n                    value={inputValues.expiryDate}\r\n                    onChange={handleDateChange}\r\n                    label=\"Срок действия:\"\r\n                    minDate={new Date()}\r\n                    placeholder=\"07/22\"\r\n                    openTo=\"year\"\r\n                    views={[\"year\", \"month\"]}\r\n                    format=\"MM/yy\"\r\n                    fullWidth\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n              <div className=\"form__right\">\r\n                <div className=\"form__row form__row_column\">\r\n                  <label htmlFor=\"cardName\">Имя владельца:</label>\r\n                  <input\r\n                    type=\"cardName\"\r\n                    id=\"cardName\"\r\n                    name=\"cardName\"\r\n                    value={inputValues.cardName}\r\n                    className=\"form__input\"\r\n                    onChange={handleInnputChange}\r\n                    required={true}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"form__row form__row_column\">\r\n                  <label htmlFor=\"cvc\">CVC:</label>\r\n                  <input\r\n                    type=\"cvc\"\r\n                    id=\"cvc\"\r\n                    name=\"cvc\"\r\n                    value={inputValues.cvc}\r\n                    className=\"form__input\"\r\n                    onChange={handleInnputChange}\r\n                    required={true}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"form__button\">\r\n              Сохранить\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    inputValues: state.payment,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    payment: (cardNumber, expiryDate, userName, cvcNumber, token) =>\r\n      dispatch(\r\n        paymentRequest({ cardNumber, expiryDate, userName, cvcNumber, token })\r\n      ),\r\n    changeField: (payload) => {\r\n      dispatch(paymentChangeField(payload));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport const PrivateRoute = ({ component: Component, isLoggedIn, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.auth.isLoggedIn,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, null)(PrivateRoute);\r\n","import React, { Component } from \"react\";\r\nimport \"./App.scss\";\r\nimport Header from \"./Header.js\";\r\nimport Map from \"./Map.js\";\r\nimport Login from \"./Login.js\";\r\nimport Registration from \"./Registration.js\";\r\nimport Profile from \"./Profile.js\";\r\nimport { withRouter, Switch, Route } from \"react-router-dom\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginSuccess } from \"./redux/actions/actions\";\r\nimport { func } from \"prop-types\";\r\n\r\nimport * as Sentry from \"@sentry/react\";\r\n\r\nconst propTypes = {\r\n  isLoggedIn: func,\r\n};\r\n\r\nclass App extends Component {\r\n  state = {\r\n    initialLoad: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (window.localStorage.getItem(\"token\")) {\r\n      this.props.isLoggedIn();\r\n    }\r\n    this.setState({ initialLoad: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Sentry.ErrorBoundary\r\n          fallback={({ error, componentStack, resetError }) => (\r\n            <React.Fragment>\r\n              <div>You have encountered an error</div>\r\n              <div>{error.toString()}</div>\r\n              <div>{componentStack}</div>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ message: \"This is my app\" });\r\n                  resetError();\r\n                }}\r\n              >\r\n                Click here to reset!\r\n              </button>\r\n            </React.Fragment>\r\n          )}\r\n        >\r\n          <div className=\"app\" data-testid=\"app\">\r\n            {(this.props.location.pathname === \"/map\" ||\r\n              this.props.location.pathname === \"/profile\") && <Header />}\r\n            {!this.state.initialLoad && (\r\n              <Switch>\r\n                <Route path=\"/\" component={Registration} exact />\r\n                <Route path=\"/login\" component={Login} />\r\n                <PrivateRoute path=\"/map\" component={Map} />\r\n                <PrivateRoute path=\"/profile\" component={Profile} />\r\n              </Switch>\r\n            )}\r\n          </div>\r\n        </Sentry.ErrorBoundary>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = propTypes;\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  const token = window.localStorage.getItem(\"token\");\r\n  return {\r\n    isLoggedIn: () => dispatch(loginSuccess(token)),\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(App));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initialState = { isLoggedIn: false, token: null };\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_REQUEST\":\r\n      return action.payload;\r\n    case \"LOGIN_SUCCESS\":\r\n      return { isLoggedIn: true, token: action.payload };\r\n    case \"LOGIN_FAILURE\":\r\n      return { isLoggedIn: false };\r\n\r\n    case \"REGISTRATION_REQUEST\":\r\n      return action.payload;\r\n    case \"REGISTRATION_SUCCESS\":\r\n      return { isLoggedIn: true, token: action.payload };\r\n    case \"REGISTRATION_FAILURE\":\r\n      return { isLoggedIn: false };\r\n\r\n    case \"LOGOUT_USER\":\r\n      return { isLoggedIn: false, token: null };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  cardNumber: \"\",\r\n  expiryDate: \"\",\r\n  cardName: \"\",\r\n  cvc: \"\",\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"PAYMENT_REQUEST\":\r\n      return state;\r\n    case \"PAYMENT_SUCCESS\":\r\n      return state;\r\n    case \"PAYMENT_FAILURE\":\r\n      return state;\r\n    case \"PAYMENT_GETCARD_REQUEST\":\r\n      return { ...initialState };\r\n    case \"PAYMENT_GETCARD_SUCCESS\":\r\n      return { ...state, ...action.payload };\r\n    case \"PAYMENT_CHANGE_FIELD\":\r\n      return { ...state, [action.payload.name]: action.payload.value };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const addressDetail = {};\r\n\r\nexport default (state = addressDetail, action) => {\r\n  switch (action.type) {\r\n    case \"ADDRESSLIST_REQUEST\":\r\n      return state;\r\n    case \"ADDRESSLIST_SUCCESS\":\r\n      return action.payload;\r\n    case \"ADDRESSLIST_FAILURE\":\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = { paymentFlag: false, orderFlag: false };\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"FLAG_CHANGE_VALUE\":\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport paymentReducer from \"./paymentReducer\";\r\nimport addressReducer from \"./addressReducer\";\r\nimport routeReducer from \"./routeReducer\";\r\nimport flagsReducer from \"./flagsReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  payment: paymentReducer,\r\n  addresses: addressReducer,\r\n  route: routeReducer,\r\n  flags: flagsReducer,\r\n  registration: false,\r\n});\r\n","const coordsDetail = null;\r\n\r\nexport default (state = coordsDetail, action) => {\r\n  switch (action.type) {\r\n    case \"ROUTE_REQUEST\":\r\n      return null;\r\n    case \"ROUTE_SUCCESS\":\r\n      return action.payload;\r\n    case \"ROUTE_FAILURE\":\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const url = \"https://loft-taxi.glitch.me\";\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  \"Content-Type\": \"application/json\",\r\n};\r\n\r\nexport const serverLogin = async (email, password) => {\r\n  return await fetch(`${url}/auth`, {\r\n    method: \"POST\",\r\n    body: JSON.stringify({ email, password }),\r\n    headers,\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => [data.success, data.token]);\r\n};\r\n\r\nexport const serverRegistration = async (name, surname, email, password) => {\r\n  return await fetch(`${url}/register`, {\r\n    method: \"POST\",\r\n    body: JSON.stringify({ name, surname, email, password }),\r\n    headers,\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => [data.success, data.token]);\r\n};\r\n\r\nexport const serverPayment = async (payload) => {\r\n  return await fetch(`${url}/card`, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(payload),\r\n    headers,\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => data.success);\r\n};\r\n\r\nexport const serverGetCard = (token) => {\r\n  return fetch(`${url}/card?token=${token}`, {\r\n    method: \"GET\",\r\n    headers,\r\n  }).then((response) => response.json());\r\n};\r\n\r\nexport const serverGetAddressList = () => {\r\n  return fetch(`${url}/addressList`, {\r\n    method: \"GET\",\r\n    headers,\r\n  }).then((response) => response.json());\r\n};\r\n\r\nexport const serverGetRoute = async (from, to) => {\r\n  return await fetch(`${url}/route?address1=${from}&address2=${to}`, {\r\n    method: \"GET\",\r\n    headers,\r\n  }).then((response) => response.json());\r\n};\r\n","import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport { loginRequest, loginSuccess, logoutUser } from \"../actions/actions\";\r\nimport { serverLogin } from \"../../api\";\r\n\r\nexport function* loginSaga(action) {\r\n  const { email, password } = action.payload;\r\n  const [success, token] = yield call(serverLogin, email, password);\r\n  if (success) {\r\n    yield put(loginSuccess(token));\r\n    yield window.localStorage.setItem(\"token\", token);\r\n  }\r\n}\r\n\r\nexport function* logoutSaga() {\r\n  yield window.localStorage.removeItem(\"token\");\r\n}\r\n\r\nexport function* authSagas() {\r\n  yield takeEvery(loginRequest().type, loginSaga);\r\n  yield takeEvery(logoutUser().type, logoutSaga);\r\n}\r\n","import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport { registrationRequest, registrationSuccess } from \"../actions/actions\";\r\nimport { serverRegistration } from \"../../api\";\r\n\r\nexport function* registrationSaga(action) {\r\n  const { name, surname, email, password } = action.payload;\r\n  const [success, token] = yield call(\r\n    serverRegistration,\r\n    name,\r\n    surname,\r\n    email,\r\n    password\r\n  );\r\n  if (success) {\r\n    yield put(registrationSuccess(token));\r\n    window.localStorage.setItem(\"token\", token);\r\n  }\r\n}\r\n\r\nexport function* regSagas() {\r\n  yield takeEvery(registrationRequest().type, registrationSaga);\r\n}\r\n","import { takeEvery, call, put, select } from \"redux-saga/effects\";\r\nimport {\r\n  paymentRequest,\r\n  paymentSuccess,\r\n  paymentGetCardRequest,\r\n  paymentGetCardSuccess,\r\n  paymentGetCardFailure,\r\n  paymentFailure,\r\n  flagChangeValue,\r\n} from \"../actions/actions\";\r\nimport { serverPayment, serverGetCard } from \"../../api\";\r\n\r\nexport function* paymentSetSaga() {\r\n  try {\r\n    const root = yield select();\r\n    const { cardNumber, expiryDate, cardName, cvc } = root.payment;\r\n    const { token } = root.auth;\r\n    const response = yield call(serverPayment, {\r\n      cardNumber,\r\n      expiryDate,\r\n      cardName,\r\n      cvc,\r\n      token,\r\n    });\r\n    if (response) {\r\n      yield put(paymentSuccess());\r\n      yield put(flagChangeValue({ paymentFlag: true }));\r\n    } else {\r\n      yield put(paymentFailure());\r\n    }\r\n  } catch (error) {\r\n    yield put(paymentFailure());\r\n  }\r\n}\r\n\r\nexport function* paymentGetSaga() {\r\n  try {\r\n    const root = yield select();\r\n    const { token } = root.auth;\r\n    const response = yield call(serverGetCard, token);\r\n\r\n    if (response && !response.error) {\r\n      yield put(paymentGetCardSuccess(response));\r\n      yield put(flagChangeValue({ paymentFlag: true }));\r\n    } else {\r\n      yield put(paymentGetCardFailure());\r\n    }\r\n  } catch (error) {\r\n    yield put(paymentGetCardFailure());\r\n  }\r\n}\r\n\r\nexport function* paymentSagas() {\r\n  yield takeEvery(paymentRequest().type, paymentSetSaga);\r\n  yield takeEvery(paymentGetCardRequest().type, paymentGetSaga);\r\n}\r\n","import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport { serverGetAddressList } from \"../../api\";\r\nimport {\r\n  addressListRequest,\r\n  addressListSuccess,\r\n  addressListFailure,\r\n} from \"../actions/actions\";\r\n\r\nexport function* getAddressesSaga() {\r\n  try {\r\n    const response = yield call(serverGetAddressList);\r\n    yield put(addressListSuccess(response.addresses));\r\n  } catch ({ message, data }) {\r\n    yield put(addressListFailure(message));\r\n  }\r\n}\r\n\r\nexport function* addressListSaga() {\r\n  yield takeEvery(addressListRequest().type, getAddressesSaga);\r\n}\r\n","import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport { serverGetRoute } from \"../../api\";\r\nimport {\r\n  routeSuccess,\r\n  routeFailure,\r\n  routeRequest,\r\n  flagChangeValue,\r\n} from \"../actions/actions\";\r\n\r\nexport function* getRouteSaga(action) {\r\n  try {\r\n    const { addressFrom, addressTo } = action.payload;\r\n    const response = yield call(serverGetRoute, addressFrom, addressTo);\r\n    yield put(routeSuccess(response));\r\n    yield put(flagChangeValue({ orderFlag: true }));\r\n  } catch ({ message }) {\r\n    yield put(routeFailure(message));\r\n  }\r\n}\r\n\r\nexport function* routeSaga() {\r\n  yield takeEvery(routeRequest().type, getRouteSaga);\r\n}\r\n","import { fork } from \"redux-saga/effects\";\r\nimport { authSagas } from \"./authSaga\";\r\nimport { regSagas } from \"./registrationSaga\";\r\nimport { paymentSagas } from \"./paymentSaga\";\r\nimport { addressListSaga } from \"./addressListSaga\";\r\nimport { routeSaga } from \"./routeSaga\";\r\n\r\nexport function* hadleSagas() {\r\n  yield fork(authSagas);\r\n  yield fork(regSagas);\r\n  yield fork(paymentSagas);\r\n  yield fork(addressListSaga);\r\n  yield fork(routeSaga);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./redux/reducers\";\r\nimport createSagaMiddleWare from \"redux-saga\";\r\nimport { hadleSagas } from \"./redux/sagas/sagas\";\r\n\r\nconst sagaMiddleWare = createSagaMiddleWare();\r\n\r\nconst createAppStore = () => {\r\n  const store = createStore(\r\n    rootReducer,\r\n    compose(\r\n      applyMiddleware(sagaMiddleWare),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : (noop) => noop\r\n    )\r\n  );\r\n\r\n  sagaMiddleWare.run(hadleSagas);\r\n  return store;\r\n};\r\n\r\nexport default createAppStore;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { theme } from \"loft-taxi-mui-theme\";\r\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport createAppStore from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport * as Sentry from \"@sentry/react\";\r\nimport { Integrations } from \"@sentry/tracing\";\r\n\r\nSentry.init({\r\n  dsn: \"https://11495a5cf3974960b64bcc3f829ca0f8@o844070.ingest.sentry.io/5814364\",\r\n  integrations: [new Integrations.BrowserTracing()],\r\n\r\n  tracesSampleRate: 1.0,\r\n});\r\n\r\nexport const store = createAppStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <MuiThemeProvider theme={theme}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </MuiThemeProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}